// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: warrior.proto

#ifndef PROTOBUF_warrior_2eproto__INCLUDED
#define PROTOBUF_warrior_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_warrior_2eproto();
void protobuf_AssignDesc_warrior_2eproto();
void protobuf_ShutdownFile_warrior_2eproto();

class WarriorDescription;
class WarriorFields;
class WarriorJuniorFields;
class WarriorSeniorFields;

enum WarriorType {
  WARRIOR_TYPE_MIN = 0,
  WARRIOR_TYPE_SHORT_INFANTRY = 1,
  WARRIOR_TYPE_SHOOTER_INFANTRY = 2,
  WARRIOR_TYPE_SNIPER_INFANTRY = 3,
  WARRIOR_TYPE_LIGHT_CAVALRY = 4,
  WARRIOR_TYPE_HEAVY_CAVALRY = 5,
  WARRIOR_TYPE_THROWER = 6,
  WARRIOR_TYPE_MAX = 7
};
bool WarriorType_IsValid(int value);
const WarriorType WarriorType_MIN = WARRIOR_TYPE_MIN;
const WarriorType WarriorType_MAX = WARRIOR_TYPE_MAX;
const int WarriorType_ARRAYSIZE = WarriorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WarriorType_descriptor();
inline const ::std::string& WarriorType_Name(WarriorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WarriorType_descriptor(), value);
}
inline bool WarriorType_Parse(
    const ::std::string& name, WarriorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WarriorType>(
    WarriorType_descriptor(), name, value);
}
// ===================================================================

class WarriorDescription : public ::google::protobuf::Message {
 public:
  WarriorDescription();
  virtual ~WarriorDescription();

  WarriorDescription(const WarriorDescription& from);

  inline WarriorDescription& operator=(const WarriorDescription& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarriorDescription& default_instance();

  void Swap(WarriorDescription* other);

  // implements Message ----------------------------------------------

  WarriorDescription* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarriorDescription& from);
  void MergeFrom(const WarriorDescription& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 max_hp = 3;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 3;
  inline ::google::protobuf::int32 max_hp() const;
  inline void set_max_hp(::google::protobuf::int32 value);

  // optional int32 attack = 4;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 4;
  inline ::google::protobuf::int32 attack() const;
  inline void set_attack(::google::protobuf::int32 value);

  // optional int32 defence = 5;
  inline bool has_defence() const;
  inline void clear_defence();
  static const int kDefenceFieldNumber = 5;
  inline ::google::protobuf::int32 defence() const;
  inline void set_defence(::google::protobuf::int32 value);

  // optional int32 move_speed = 6;
  inline bool has_move_speed() const;
  inline void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 6;
  inline ::google::protobuf::int32 move_speed() const;
  inline void set_move_speed(::google::protobuf::int32 value);

  // optional int32 attack_speed = 7;
  inline bool has_attack_speed() const;
  inline void clear_attack_speed();
  static const int kAttackSpeedFieldNumber = 7;
  inline ::google::protobuf::int32 attack_speed() const;
  inline void set_attack_speed(::google::protobuf::int32 value);

  // optional int32 attack_range = 8;
  inline bool has_attack_range() const;
  inline void clear_attack_range();
  static const int kAttackRangeFieldNumber = 8;
  inline ::google::protobuf::int32 attack_range() const;
  inline void set_attack_range(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.WarriorDescription)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_attack();
  inline void clear_has_attack();
  inline void set_has_defence();
  inline void clear_has_defence();
  inline void set_has_move_speed();
  inline void clear_has_move_speed();
  inline void set_has_attack_speed();
  inline void clear_has_attack_speed();
  inline void set_has_attack_range();
  inline void clear_has_attack_range();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 attack_;
  ::google::protobuf::int32 defence_;
  ::google::protobuf::int32 move_speed_;
  ::google::protobuf::int32 attack_speed_;
  ::google::protobuf::int32 attack_range_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_warrior_2eproto();
  friend void protobuf_AssignDesc_warrior_2eproto();
  friend void protobuf_ShutdownFile_warrior_2eproto();

  void InitAsDefaultInstance();
  static WarriorDescription* default_instance_;
};
// -------------------------------------------------------------------

class WarriorFields : public ::google::protobuf::Message {
 public:
  WarriorFields();
  virtual ~WarriorFields();

  WarriorFields(const WarriorFields& from);

  inline WarriorFields& operator=(const WarriorFields& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarriorFields& default_instance();

  void Swap(WarriorFields* other);

  // implements Message ----------------------------------------------

  WarriorFields* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarriorFields& from);
  void MergeFrom(const WarriorFields& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional uint64 host_id = 3;
  inline bool has_host_id() const;
  inline void clear_host_id();
  static const int kHostIdFieldNumber = 3;
  inline ::google::protobuf::uint64 host_id() const;
  inline void set_host_id(::google::protobuf::uint64 value);

  // optional int32 camp_id = 4;
  inline bool has_camp_id() const;
  inline void clear_camp_id();
  static const int kCampIdFieldNumber = 4;
  inline ::google::protobuf::int32 camp_id() const;
  inline void set_camp_id(::google::protobuf::int32 value);

  // optional int32 hp = 5;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 5;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // optional int32 max_hp = 6;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 6;
  inline ::google::protobuf::int32 max_hp() const;
  inline void set_max_hp(::google::protobuf::int32 value);

  // optional int32 attack = 7;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 7;
  inline ::google::protobuf::int32 attack() const;
  inline void set_attack(::google::protobuf::int32 value);

  // optional int32 defence = 8;
  inline bool has_defence() const;
  inline void clear_defence();
  static const int kDefenceFieldNumber = 8;
  inline ::google::protobuf::int32 defence() const;
  inline void set_defence(::google::protobuf::int32 value);

  // optional int32 attack_speed = 9;
  inline bool has_attack_speed() const;
  inline void clear_attack_speed();
  static const int kAttackSpeedFieldNumber = 9;
  inline ::google::protobuf::int32 attack_speed() const;
  inline void set_attack_speed(::google::protobuf::int32 value);

  // optional int32 move_speed = 10;
  inline bool has_move_speed() const;
  inline void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 10;
  inline ::google::protobuf::int32 move_speed() const;
  inline void set_move_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.WarriorFields)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_host_id();
  inline void clear_has_host_id();
  inline void set_has_camp_id();
  inline void clear_has_camp_id();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_attack();
  inline void clear_has_attack();
  inline void set_has_defence();
  inline void clear_has_defence();
  inline void set_has_attack_speed();
  inline void clear_has_attack_speed();
  inline void set_has_move_speed();
  inline void clear_has_move_speed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint64 host_id_;
  ::google::protobuf::int32 camp_id_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 attack_;
  ::google::protobuf::int32 defence_;
  ::google::protobuf::int32 attack_speed_;
  ::google::protobuf::int32 move_speed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_warrior_2eproto();
  friend void protobuf_AssignDesc_warrior_2eproto();
  friend void protobuf_ShutdownFile_warrior_2eproto();

  void InitAsDefaultInstance();
  static WarriorFields* default_instance_;
};
// -------------------------------------------------------------------

class WarriorJuniorFields : public ::google::protobuf::Message {
 public:
  WarriorJuniorFields();
  virtual ~WarriorJuniorFields();

  WarriorJuniorFields(const WarriorJuniorFields& from);

  inline WarriorJuniorFields& operator=(const WarriorJuniorFields& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarriorJuniorFields& default_instance();

  void Swap(WarriorJuniorFields* other);

  // implements Message ----------------------------------------------

  WarriorJuniorFields* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarriorJuniorFields& from);
  void MergeFrom(const WarriorJuniorFields& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 max_hp = 1;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 1;
  inline ::google::protobuf::int32 max_hp() const;
  inline void set_max_hp(::google::protobuf::int32 value);

  // optional int32 attack = 2;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 2;
  inline ::google::protobuf::int32 attack() const;
  inline void set_attack(::google::protobuf::int32 value);

  // optional int32 defence = 3;
  inline bool has_defence() const;
  inline void clear_defence();
  static const int kDefenceFieldNumber = 3;
  inline ::google::protobuf::int32 defence() const;
  inline void set_defence(::google::protobuf::int32 value);

  // optional int32 move_speed = 4;
  inline bool has_move_speed() const;
  inline void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 4;
  inline ::google::protobuf::int32 move_speed() const;
  inline void set_move_speed(::google::protobuf::int32 value);

  // optional int32 attack_speed = 5;
  inline bool has_attack_speed() const;
  inline void clear_attack_speed();
  static const int kAttackSpeedFieldNumber = 5;
  inline ::google::protobuf::int32 attack_speed() const;
  inline void set_attack_speed(::google::protobuf::int32 value);

  // optional int32 attack_range = 6;
  inline bool has_attack_range() const;
  inline void clear_attack_range();
  static const int kAttackRangeFieldNumber = 6;
  inline ::google::protobuf::int32 attack_range() const;
  inline void set_attack_range(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.WarriorJuniorFields)
 private:
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_attack();
  inline void clear_has_attack();
  inline void set_has_defence();
  inline void clear_has_defence();
  inline void set_has_move_speed();
  inline void clear_has_move_speed();
  inline void set_has_attack_speed();
  inline void clear_has_attack_speed();
  inline void set_has_attack_range();
  inline void clear_has_attack_range();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 attack_;
  ::google::protobuf::int32 defence_;
  ::google::protobuf::int32 move_speed_;
  ::google::protobuf::int32 attack_speed_;
  ::google::protobuf::int32 attack_range_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_warrior_2eproto();
  friend void protobuf_AssignDesc_warrior_2eproto();
  friend void protobuf_ShutdownFile_warrior_2eproto();

  void InitAsDefaultInstance();
  static WarriorJuniorFields* default_instance_;
};
// -------------------------------------------------------------------

class WarriorSeniorFields : public ::google::protobuf::Message {
 public:
  WarriorSeniorFields();
  virtual ~WarriorSeniorFields();

  WarriorSeniorFields(const WarriorSeniorFields& from);

  inline WarriorSeniorFields& operator=(const WarriorSeniorFields& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarriorSeniorFields& default_instance();

  void Swap(WarriorSeniorFields* other);

  // implements Message ----------------------------------------------

  WarriorSeniorFields* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarriorSeniorFields& from);
  void MergeFrom(const WarriorSeniorFields& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 max_hp_add_value = 1;
  inline bool has_max_hp_add_value() const;
  inline void clear_max_hp_add_value();
  static const int kMaxHpAddValueFieldNumber = 1;
  inline ::google::protobuf::int32 max_hp_add_value() const;
  inline void set_max_hp_add_value(::google::protobuf::int32 value);

  // optional int32 max_hp_add_per = 2;
  inline bool has_max_hp_add_per() const;
  inline void clear_max_hp_add_per();
  static const int kMaxHpAddPerFieldNumber = 2;
  inline ::google::protobuf::int32 max_hp_add_per() const;
  inline void set_max_hp_add_per(::google::protobuf::int32 value);

  // optional int32 attack_add_value = 3;
  inline bool has_attack_add_value() const;
  inline void clear_attack_add_value();
  static const int kAttackAddValueFieldNumber = 3;
  inline ::google::protobuf::int32 attack_add_value() const;
  inline void set_attack_add_value(::google::protobuf::int32 value);

  // optional int32 attack_add_per = 4;
  inline bool has_attack_add_per() const;
  inline void clear_attack_add_per();
  static const int kAttackAddPerFieldNumber = 4;
  inline ::google::protobuf::int32 attack_add_per() const;
  inline void set_attack_add_per(::google::protobuf::int32 value);

  // optional int32 defence_add_value = 5;
  inline bool has_defence_add_value() const;
  inline void clear_defence_add_value();
  static const int kDefenceAddValueFieldNumber = 5;
  inline ::google::protobuf::int32 defence_add_value() const;
  inline void set_defence_add_value(::google::protobuf::int32 value);

  // optional int32 defence_add_per = 6;
  inline bool has_defence_add_per() const;
  inline void clear_defence_add_per();
  static const int kDefenceAddPerFieldNumber = 6;
  inline ::google::protobuf::int32 defence_add_per() const;
  inline void set_defence_add_per(::google::protobuf::int32 value);

  // optional int32 move_speed_add_value = 7;
  inline bool has_move_speed_add_value() const;
  inline void clear_move_speed_add_value();
  static const int kMoveSpeedAddValueFieldNumber = 7;
  inline ::google::protobuf::int32 move_speed_add_value() const;
  inline void set_move_speed_add_value(::google::protobuf::int32 value);

  // optional int32 move_speed_add_per = 8;
  inline bool has_move_speed_add_per() const;
  inline void clear_move_speed_add_per();
  static const int kMoveSpeedAddPerFieldNumber = 8;
  inline ::google::protobuf::int32 move_speed_add_per() const;
  inline void set_move_speed_add_per(::google::protobuf::int32 value);

  // optional int32 attack_speed_add_value = 9;
  inline bool has_attack_speed_add_value() const;
  inline void clear_attack_speed_add_value();
  static const int kAttackSpeedAddValueFieldNumber = 9;
  inline ::google::protobuf::int32 attack_speed_add_value() const;
  inline void set_attack_speed_add_value(::google::protobuf::int32 value);

  // optional int32 attack_speed_add_per = 10;
  inline bool has_attack_speed_add_per() const;
  inline void clear_attack_speed_add_per();
  static const int kAttackSpeedAddPerFieldNumber = 10;
  inline ::google::protobuf::int32 attack_speed_add_per() const;
  inline void set_attack_speed_add_per(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.WarriorSeniorFields)
 private:
  inline void set_has_max_hp_add_value();
  inline void clear_has_max_hp_add_value();
  inline void set_has_max_hp_add_per();
  inline void clear_has_max_hp_add_per();
  inline void set_has_attack_add_value();
  inline void clear_has_attack_add_value();
  inline void set_has_attack_add_per();
  inline void clear_has_attack_add_per();
  inline void set_has_defence_add_value();
  inline void clear_has_defence_add_value();
  inline void set_has_defence_add_per();
  inline void clear_has_defence_add_per();
  inline void set_has_move_speed_add_value();
  inline void clear_has_move_speed_add_value();
  inline void set_has_move_speed_add_per();
  inline void clear_has_move_speed_add_per();
  inline void set_has_attack_speed_add_value();
  inline void clear_has_attack_speed_add_value();
  inline void set_has_attack_speed_add_per();
  inline void clear_has_attack_speed_add_per();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 max_hp_add_value_;
  ::google::protobuf::int32 max_hp_add_per_;
  ::google::protobuf::int32 attack_add_value_;
  ::google::protobuf::int32 attack_add_per_;
  ::google::protobuf::int32 defence_add_value_;
  ::google::protobuf::int32 defence_add_per_;
  ::google::protobuf::int32 move_speed_add_value_;
  ::google::protobuf::int32 move_speed_add_per_;
  ::google::protobuf::int32 attack_speed_add_value_;
  ::google::protobuf::int32 attack_speed_add_per_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_warrior_2eproto();
  friend void protobuf_AssignDesc_warrior_2eproto();
  friend void protobuf_ShutdownFile_warrior_2eproto();

  void InitAsDefaultInstance();
  static WarriorSeniorFields* default_instance_;
};
// ===================================================================


// ===================================================================

// WarriorDescription

// optional int32 id = 1;
inline bool WarriorDescription::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarriorDescription::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarriorDescription::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarriorDescription::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WarriorDescription::id() const {
  return id_;
}
inline void WarriorDescription::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool WarriorDescription::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarriorDescription::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarriorDescription::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarriorDescription::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 WarriorDescription::type() const {
  return type_;
}
inline void WarriorDescription::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 max_hp = 3;
inline bool WarriorDescription::has_max_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarriorDescription::set_has_max_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarriorDescription::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarriorDescription::clear_max_hp() {
  max_hp_ = 0;
  clear_has_max_hp();
}
inline ::google::protobuf::int32 WarriorDescription::max_hp() const {
  return max_hp_;
}
inline void WarriorDescription::set_max_hp(::google::protobuf::int32 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// optional int32 attack = 4;
inline bool WarriorDescription::has_attack() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WarriorDescription::set_has_attack() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WarriorDescription::clear_has_attack() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WarriorDescription::clear_attack() {
  attack_ = 0;
  clear_has_attack();
}
inline ::google::protobuf::int32 WarriorDescription::attack() const {
  return attack_;
}
inline void WarriorDescription::set_attack(::google::protobuf::int32 value) {
  set_has_attack();
  attack_ = value;
}

// optional int32 defence = 5;
inline bool WarriorDescription::has_defence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WarriorDescription::set_has_defence() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WarriorDescription::clear_has_defence() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WarriorDescription::clear_defence() {
  defence_ = 0;
  clear_has_defence();
}
inline ::google::protobuf::int32 WarriorDescription::defence() const {
  return defence_;
}
inline void WarriorDescription::set_defence(::google::protobuf::int32 value) {
  set_has_defence();
  defence_ = value;
}

// optional int32 move_speed = 6;
inline bool WarriorDescription::has_move_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WarriorDescription::set_has_move_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WarriorDescription::clear_has_move_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WarriorDescription::clear_move_speed() {
  move_speed_ = 0;
  clear_has_move_speed();
}
inline ::google::protobuf::int32 WarriorDescription::move_speed() const {
  return move_speed_;
}
inline void WarriorDescription::set_move_speed(::google::protobuf::int32 value) {
  set_has_move_speed();
  move_speed_ = value;
}

// optional int32 attack_speed = 7;
inline bool WarriorDescription::has_attack_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WarriorDescription::set_has_attack_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WarriorDescription::clear_has_attack_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WarriorDescription::clear_attack_speed() {
  attack_speed_ = 0;
  clear_has_attack_speed();
}
inline ::google::protobuf::int32 WarriorDescription::attack_speed() const {
  return attack_speed_;
}
inline void WarriorDescription::set_attack_speed(::google::protobuf::int32 value) {
  set_has_attack_speed();
  attack_speed_ = value;
}

// optional int32 attack_range = 8;
inline bool WarriorDescription::has_attack_range() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WarriorDescription::set_has_attack_range() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WarriorDescription::clear_has_attack_range() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WarriorDescription::clear_attack_range() {
  attack_range_ = 0;
  clear_has_attack_range();
}
inline ::google::protobuf::int32 WarriorDescription::attack_range() const {
  return attack_range_;
}
inline void WarriorDescription::set_attack_range(::google::protobuf::int32 value) {
  set_has_attack_range();
  attack_range_ = value;
}

// -------------------------------------------------------------------

// WarriorFields

// optional int32 id = 1;
inline bool WarriorFields::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarriorFields::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarriorFields::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarriorFields::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WarriorFields::id() const {
  return id_;
}
inline void WarriorFields::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool WarriorFields::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarriorFields::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarriorFields::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarriorFields::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 WarriorFields::type() const {
  return type_;
}
inline void WarriorFields::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 host_id = 3;
inline bool WarriorFields::has_host_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarriorFields::set_has_host_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarriorFields::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarriorFields::clear_host_id() {
  host_id_ = GOOGLE_ULONGLONG(0);
  clear_has_host_id();
}
inline ::google::protobuf::uint64 WarriorFields::host_id() const {
  return host_id_;
}
inline void WarriorFields::set_host_id(::google::protobuf::uint64 value) {
  set_has_host_id();
  host_id_ = value;
}

// optional int32 camp_id = 4;
inline bool WarriorFields::has_camp_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WarriorFields::set_has_camp_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WarriorFields::clear_has_camp_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WarriorFields::clear_camp_id() {
  camp_id_ = 0;
  clear_has_camp_id();
}
inline ::google::protobuf::int32 WarriorFields::camp_id() const {
  return camp_id_;
}
inline void WarriorFields::set_camp_id(::google::protobuf::int32 value) {
  set_has_camp_id();
  camp_id_ = value;
}

// optional int32 hp = 5;
inline bool WarriorFields::has_hp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WarriorFields::set_has_hp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WarriorFields::clear_has_hp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WarriorFields::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 WarriorFields::hp() const {
  return hp_;
}
inline void WarriorFields::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
}

// optional int32 max_hp = 6;
inline bool WarriorFields::has_max_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WarriorFields::set_has_max_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WarriorFields::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WarriorFields::clear_max_hp() {
  max_hp_ = 0;
  clear_has_max_hp();
}
inline ::google::protobuf::int32 WarriorFields::max_hp() const {
  return max_hp_;
}
inline void WarriorFields::set_max_hp(::google::protobuf::int32 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// optional int32 attack = 7;
inline bool WarriorFields::has_attack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WarriorFields::set_has_attack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WarriorFields::clear_has_attack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WarriorFields::clear_attack() {
  attack_ = 0;
  clear_has_attack();
}
inline ::google::protobuf::int32 WarriorFields::attack() const {
  return attack_;
}
inline void WarriorFields::set_attack(::google::protobuf::int32 value) {
  set_has_attack();
  attack_ = value;
}

// optional int32 defence = 8;
inline bool WarriorFields::has_defence() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WarriorFields::set_has_defence() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WarriorFields::clear_has_defence() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WarriorFields::clear_defence() {
  defence_ = 0;
  clear_has_defence();
}
inline ::google::protobuf::int32 WarriorFields::defence() const {
  return defence_;
}
inline void WarriorFields::set_defence(::google::protobuf::int32 value) {
  set_has_defence();
  defence_ = value;
}

// optional int32 attack_speed = 9;
inline bool WarriorFields::has_attack_speed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WarriorFields::set_has_attack_speed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WarriorFields::clear_has_attack_speed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WarriorFields::clear_attack_speed() {
  attack_speed_ = 0;
  clear_has_attack_speed();
}
inline ::google::protobuf::int32 WarriorFields::attack_speed() const {
  return attack_speed_;
}
inline void WarriorFields::set_attack_speed(::google::protobuf::int32 value) {
  set_has_attack_speed();
  attack_speed_ = value;
}

// optional int32 move_speed = 10;
inline bool WarriorFields::has_move_speed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WarriorFields::set_has_move_speed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WarriorFields::clear_has_move_speed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WarriorFields::clear_move_speed() {
  move_speed_ = 0;
  clear_has_move_speed();
}
inline ::google::protobuf::int32 WarriorFields::move_speed() const {
  return move_speed_;
}
inline void WarriorFields::set_move_speed(::google::protobuf::int32 value) {
  set_has_move_speed();
  move_speed_ = value;
}

// -------------------------------------------------------------------

// WarriorJuniorFields

// optional int32 max_hp = 1;
inline bool WarriorJuniorFields::has_max_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarriorJuniorFields::set_has_max_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarriorJuniorFields::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarriorJuniorFields::clear_max_hp() {
  max_hp_ = 0;
  clear_has_max_hp();
}
inline ::google::protobuf::int32 WarriorJuniorFields::max_hp() const {
  return max_hp_;
}
inline void WarriorJuniorFields::set_max_hp(::google::protobuf::int32 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// optional int32 attack = 2;
inline bool WarriorJuniorFields::has_attack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarriorJuniorFields::set_has_attack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarriorJuniorFields::clear_has_attack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarriorJuniorFields::clear_attack() {
  attack_ = 0;
  clear_has_attack();
}
inline ::google::protobuf::int32 WarriorJuniorFields::attack() const {
  return attack_;
}
inline void WarriorJuniorFields::set_attack(::google::protobuf::int32 value) {
  set_has_attack();
  attack_ = value;
}

// optional int32 defence = 3;
inline bool WarriorJuniorFields::has_defence() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarriorJuniorFields::set_has_defence() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarriorJuniorFields::clear_has_defence() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarriorJuniorFields::clear_defence() {
  defence_ = 0;
  clear_has_defence();
}
inline ::google::protobuf::int32 WarriorJuniorFields::defence() const {
  return defence_;
}
inline void WarriorJuniorFields::set_defence(::google::protobuf::int32 value) {
  set_has_defence();
  defence_ = value;
}

// optional int32 move_speed = 4;
inline bool WarriorJuniorFields::has_move_speed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WarriorJuniorFields::set_has_move_speed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WarriorJuniorFields::clear_has_move_speed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WarriorJuniorFields::clear_move_speed() {
  move_speed_ = 0;
  clear_has_move_speed();
}
inline ::google::protobuf::int32 WarriorJuniorFields::move_speed() const {
  return move_speed_;
}
inline void WarriorJuniorFields::set_move_speed(::google::protobuf::int32 value) {
  set_has_move_speed();
  move_speed_ = value;
}

// optional int32 attack_speed = 5;
inline bool WarriorJuniorFields::has_attack_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WarriorJuniorFields::set_has_attack_speed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WarriorJuniorFields::clear_has_attack_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WarriorJuniorFields::clear_attack_speed() {
  attack_speed_ = 0;
  clear_has_attack_speed();
}
inline ::google::protobuf::int32 WarriorJuniorFields::attack_speed() const {
  return attack_speed_;
}
inline void WarriorJuniorFields::set_attack_speed(::google::protobuf::int32 value) {
  set_has_attack_speed();
  attack_speed_ = value;
}

// optional int32 attack_range = 6;
inline bool WarriorJuniorFields::has_attack_range() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WarriorJuniorFields::set_has_attack_range() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WarriorJuniorFields::clear_has_attack_range() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WarriorJuniorFields::clear_attack_range() {
  attack_range_ = 0;
  clear_has_attack_range();
}
inline ::google::protobuf::int32 WarriorJuniorFields::attack_range() const {
  return attack_range_;
}
inline void WarriorJuniorFields::set_attack_range(::google::protobuf::int32 value) {
  set_has_attack_range();
  attack_range_ = value;
}

// -------------------------------------------------------------------

// WarriorSeniorFields

// optional int32 max_hp_add_value = 1;
inline bool WarriorSeniorFields::has_max_hp_add_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarriorSeniorFields::set_has_max_hp_add_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarriorSeniorFields::clear_has_max_hp_add_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarriorSeniorFields::clear_max_hp_add_value() {
  max_hp_add_value_ = 0;
  clear_has_max_hp_add_value();
}
inline ::google::protobuf::int32 WarriorSeniorFields::max_hp_add_value() const {
  return max_hp_add_value_;
}
inline void WarriorSeniorFields::set_max_hp_add_value(::google::protobuf::int32 value) {
  set_has_max_hp_add_value();
  max_hp_add_value_ = value;
}

// optional int32 max_hp_add_per = 2;
inline bool WarriorSeniorFields::has_max_hp_add_per() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarriorSeniorFields::set_has_max_hp_add_per() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarriorSeniorFields::clear_has_max_hp_add_per() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarriorSeniorFields::clear_max_hp_add_per() {
  max_hp_add_per_ = 0;
  clear_has_max_hp_add_per();
}
inline ::google::protobuf::int32 WarriorSeniorFields::max_hp_add_per() const {
  return max_hp_add_per_;
}
inline void WarriorSeniorFields::set_max_hp_add_per(::google::protobuf::int32 value) {
  set_has_max_hp_add_per();
  max_hp_add_per_ = value;
}

// optional int32 attack_add_value = 3;
inline bool WarriorSeniorFields::has_attack_add_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarriorSeniorFields::set_has_attack_add_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarriorSeniorFields::clear_has_attack_add_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarriorSeniorFields::clear_attack_add_value() {
  attack_add_value_ = 0;
  clear_has_attack_add_value();
}
inline ::google::protobuf::int32 WarriorSeniorFields::attack_add_value() const {
  return attack_add_value_;
}
inline void WarriorSeniorFields::set_attack_add_value(::google::protobuf::int32 value) {
  set_has_attack_add_value();
  attack_add_value_ = value;
}

// optional int32 attack_add_per = 4;
inline bool WarriorSeniorFields::has_attack_add_per() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WarriorSeniorFields::set_has_attack_add_per() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WarriorSeniorFields::clear_has_attack_add_per() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WarriorSeniorFields::clear_attack_add_per() {
  attack_add_per_ = 0;
  clear_has_attack_add_per();
}
inline ::google::protobuf::int32 WarriorSeniorFields::attack_add_per() const {
  return attack_add_per_;
}
inline void WarriorSeniorFields::set_attack_add_per(::google::protobuf::int32 value) {
  set_has_attack_add_per();
  attack_add_per_ = value;
}

// optional int32 defence_add_value = 5;
inline bool WarriorSeniorFields::has_defence_add_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WarriorSeniorFields::set_has_defence_add_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WarriorSeniorFields::clear_has_defence_add_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WarriorSeniorFields::clear_defence_add_value() {
  defence_add_value_ = 0;
  clear_has_defence_add_value();
}
inline ::google::protobuf::int32 WarriorSeniorFields::defence_add_value() const {
  return defence_add_value_;
}
inline void WarriorSeniorFields::set_defence_add_value(::google::protobuf::int32 value) {
  set_has_defence_add_value();
  defence_add_value_ = value;
}

// optional int32 defence_add_per = 6;
inline bool WarriorSeniorFields::has_defence_add_per() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WarriorSeniorFields::set_has_defence_add_per() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WarriorSeniorFields::clear_has_defence_add_per() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WarriorSeniorFields::clear_defence_add_per() {
  defence_add_per_ = 0;
  clear_has_defence_add_per();
}
inline ::google::protobuf::int32 WarriorSeniorFields::defence_add_per() const {
  return defence_add_per_;
}
inline void WarriorSeniorFields::set_defence_add_per(::google::protobuf::int32 value) {
  set_has_defence_add_per();
  defence_add_per_ = value;
}

// optional int32 move_speed_add_value = 7;
inline bool WarriorSeniorFields::has_move_speed_add_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WarriorSeniorFields::set_has_move_speed_add_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WarriorSeniorFields::clear_has_move_speed_add_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WarriorSeniorFields::clear_move_speed_add_value() {
  move_speed_add_value_ = 0;
  clear_has_move_speed_add_value();
}
inline ::google::protobuf::int32 WarriorSeniorFields::move_speed_add_value() const {
  return move_speed_add_value_;
}
inline void WarriorSeniorFields::set_move_speed_add_value(::google::protobuf::int32 value) {
  set_has_move_speed_add_value();
  move_speed_add_value_ = value;
}

// optional int32 move_speed_add_per = 8;
inline bool WarriorSeniorFields::has_move_speed_add_per() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WarriorSeniorFields::set_has_move_speed_add_per() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WarriorSeniorFields::clear_has_move_speed_add_per() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WarriorSeniorFields::clear_move_speed_add_per() {
  move_speed_add_per_ = 0;
  clear_has_move_speed_add_per();
}
inline ::google::protobuf::int32 WarriorSeniorFields::move_speed_add_per() const {
  return move_speed_add_per_;
}
inline void WarriorSeniorFields::set_move_speed_add_per(::google::protobuf::int32 value) {
  set_has_move_speed_add_per();
  move_speed_add_per_ = value;
}

// optional int32 attack_speed_add_value = 9;
inline bool WarriorSeniorFields::has_attack_speed_add_value() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WarriorSeniorFields::set_has_attack_speed_add_value() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WarriorSeniorFields::clear_has_attack_speed_add_value() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WarriorSeniorFields::clear_attack_speed_add_value() {
  attack_speed_add_value_ = 0;
  clear_has_attack_speed_add_value();
}
inline ::google::protobuf::int32 WarriorSeniorFields::attack_speed_add_value() const {
  return attack_speed_add_value_;
}
inline void WarriorSeniorFields::set_attack_speed_add_value(::google::protobuf::int32 value) {
  set_has_attack_speed_add_value();
  attack_speed_add_value_ = value;
}

// optional int32 attack_speed_add_per = 10;
inline bool WarriorSeniorFields::has_attack_speed_add_per() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WarriorSeniorFields::set_has_attack_speed_add_per() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WarriorSeniorFields::clear_has_attack_speed_add_per() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WarriorSeniorFields::clear_attack_speed_add_per() {
  attack_speed_add_per_ = 0;
  clear_has_attack_speed_add_per();
}
inline ::google::protobuf::int32 WarriorSeniorFields::attack_speed_add_per() const {
  return attack_speed_add_per_;
}
inline void WarriorSeniorFields::set_attack_speed_add_per(::google::protobuf::int32 value) {
  set_has_attack_speed_add_per();
  attack_speed_add_per_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::WarriorType>() {
  return ::protocol::WarriorType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_warrior_2eproto__INCLUDED
