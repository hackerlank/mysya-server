import "building.proto";
import "warrior.proto";

package tutorial.orcas.combat.protocol;

// 战斗类型
enum CombatType {
  COMBAT_TYPE_MIN = 0;

  COMBAT_TYPE_PVE = 1;                                        // Player VS Environment
  COMBAT_TYPE_PVP = 2;                                        // Player VS Player
  COMBAT_TYPE_GVG = 3;                                        // Group VS Group

  COMBAT_TYPE_MAX = 4;
}

// 战斗部署结果类型
enum CombatDeployResultType {
  COMBAT_DEPLOY_RESULT_TYPE_MIN = 0;

  COMBAT_DEPLOY_RESULT_TYPE_COMPLETE = 1;                     // 部署完成
  COMBAT_DEPLOY_RESULT_TYPE_FAILURE = 2;                      // 部署失败

  COMBAT_DEPLOY_RESULT_TYPE_MAX = 3;
}

// 出战角色数据
message CombatRoleData {
  required uint64 argent_id = 1;                              // 代理id(要求全局唯一)
  required string ai = 2;                                     // ai
  repeated .protocol.WarriorDescription warrior = 3;          // 兵团列表
}

// 出战阵营数据
message CombatCampData {
  required int32 id = 1;                                      // 阵营id
  repeated .protocol.BuildingDescription building = 2;        // 建筑列表
  repeated CombatRoleData role = 3;                           // 角色列表
}

// 出战初始化数据
message CombatInitialData {
  required int32 map_id = 1;                                  // 地图id
  required int32 combat_type = 2;                             // 战斗类型(CombatType)
  repeated CombatCampData camp = 3;                           // 阵营列表
}


// ----------------- message body ------------------

// 战斗部署请求
message MessageCombatDeployRequest {
  required int32 host_id = 1;                                 // 宿主id
  required CombatInitialData combat_initial_data = 2;         // 战斗初始数据
}
// 战斗部署回应
message MessageCombatDeployResponse {
  required int32 host_id = 1;                                 // 宿主id
  required int32 result_type = 2;                             // 部署结果(CombatDeployResultType)
  optional int32 combat_id = 3;                               // 战斗id
}

// 连接代理请求
message MessageCombatConnectArgentRequest {
  required uint64 argent_id = 1;                              // 代理id
  required int32 combat_id = 2;                               // 战斗id
}
// 连接代理回应
message MessageCombatConnectArgentResponse {
  enum ErrorCode {
    ERROR_CODE_COMPLETE = 0;
    ERROR_CODE_FAILURE = -1;
  }
  required int32 ret_code = 1;                                // 返回码
  required uint64 argent_id = 2;                              // 代理id
  required int32 combat_id = 3;                               // 战斗id
}

// 开战请求
message MessageCombatBeginRequest {
  required int32 combat_id = 1;                               // 战斗id
}
// 开战回应
message MessageCombatBeginResponse {
  enum ErrorCode {
    ERROR_CODE_SUCCESS = 0;
    ERROR_CODE_FAILURE = -1;
  }
  required int32 ret_code = 1;
  required int32 combat_id = 2;
}

// 战斗代理请求
message MessageCombatArgentRequest {
  required uint64 argent_id = 1;                              // 代理id
  required int32 type = 2;                                    // 类型
  required bytes data = 3;                                    // 二进制数据
}

// 战斗代理同步
message MessageCombatArgentSync {
  required uint64 argent_id = 1;                              // 代理id
  required int32 type = 2;                                    // 类型
  required bytes data = 3;                                    // 二进制数据
}
